@page "/confirmation"
@inject IBasketOperable basket
@inject OrderService orderService

<PageTitle>Potwierdzenie zamówienia</PageTitle>

<div class="text-center mt-5">
    @if (!orderReceived)
    {
        <!--

            Oczekiwanie na zwrotkę.

        -->
        <div class="spinner-border" style="width: 20rem; height: 20rem; font-size: 100px; animation-duration: 2s;" role="status">
            <span class="sr-only"></span>
        </div>
        <div>
            <h1 class="mb-5 mt-5">Oczekiwanie na potwierdzenie zamówienia...</h1>
        </div>
    }
    else
    {
        <!--

            Wyświetla się, gdy zwrotka jest prawidłowa.

        -->
        <span class="material-symbols-outlined main-color" style="font-size: 300px;">
            check_circle
        </span>
        <h1 class="mb-2" style="font-size: 50px;"><b>Dziękujemy za zakup!</b></h1>
        <h2 class="mb-4">O zmianie statusu zamówienia poinformujemy e-mailem</h2>
        <div class="div-line"></div>
        <button class="mb-3 mt-4 button-style button-ok" style="width: 100%; height: 5rem;" onclick="location.href='/'">Przejdź do strony głównej</button>
    }
</div>


@code {

    ////////////////////////////////////////////////////////////////////////
    ///Zmienne.

    /// <summary>
    /// Czy poprawnie odebrano zamówienie.
    /// </summary>
    bool orderReceived = false;

    ////////////////////////////////////////////////////////////////////////
    ///

    /// <summary>
    /// Inicjalizacja strony i wysłanie zamówienia.
    /// </summary>
    protected override async void OnInitialized()
    {
        Order order = orderService.Order;

        orderReceived = await orderService.SendOrder(order);

        if (orderReceived)
        {
            StateHasChanged();
            basket.CreateBasket();
        }
    }

}